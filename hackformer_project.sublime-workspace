{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"EntityType_m",
				"EntityType_motherShip"
			],
			[
				"text",
				"textures"
			],
			[
				"TILE_HEIGHT",
				"TILE_HEIGHT_WITHOUT_OVERHANG_IN_METERS"
			],
			[
				"save",
				"saveHackFile"
			],
			[
				"toggle",
				"toggleCheckpoint"
			],
			[
				"check",
				"checkPointSave"
			],
			[
				"checkP",
				"checkPointStorage"
			],
			[
				"Entityflag_c",
				"EntityFlag_checkPointReached"
			],
			[
				"che",
				"checkPointUnreached"
			],
			[
				"hack",
				"hackSaveStorage"
			],
			[
				"select",
				"selectedIndex"
			],
			[
				"coll",
				"collisionPointsCount"
			],
			[
				"map",
				"mapWidthInTiles"
			],
			[
				"mess",
				"messageBoxData"
			],
			[
				"draw",
				"drawOrder"
			],
			[
				"ConsoleField_spawn",
				"ConsoleField_spawnsShrikes"
			],
			[
				"moveTo",
				"moveTowardsTargetParabolic"
			],
			[
				"initialDst",
				"initialDstToTarget"
			],
			[
				"startP",
				"startPos"
			],
			[
				"ConsoleField_b",
				"ConsoleField_bodyguard"
			],
			[
				"target",
				"targetRefs"
			],
			[
				"canM",
				"canMoveSpotLight"
			],
			[
				"spotL",
				"spotLightAngle"
			],
			[
				"spot",
				"spotLightAngle"
			],
			[
				"ig",
				"ignoreAllPenetratingEntities"
			],
			[
				"ignore",
				"ignorePenetrationEntities"
			],
			[
				"addTraw",
				"addTrawlerBootUp"
			],
			[
				"freeE",
				"freeEntityDuringLevel"
			],
			[
				"couldSpawn",
				"couldSpawnShrike"
			],
			[
				"EntityType_mother",
				"EntityType_motherShipProjectile"
			],
			[
				"lowe",
				"lowestEntityPoint1"
			],
			[
				"hit",
				"hitboxOffset"
			],
			[
				"rotatio",
				"rotatedCollisionPoints"
			],
			[
				"ro",
				"rotatedCollisionPoints"
			],
			[
				"get",
				"getSaveStartPtr"
			],
			[
				"barC",
				"barCircleTex"
			],
			[
				"valueb",
				"valueBackgroundPenetration"
			],
			[
				"valueB",
				"valueBackgroundPenetration"
			],
			[
				"gett",
				"getTextPadding"
			],
			[
				"nu",
				"numChildren"
			],
			[
				"valueS",
				"valueSize"
			],
			[
				"as",
				"aspectRatio"
			],
			[
				"pushT",
				"pushTexture"
			],
			[
				"field",
				"fieldSize"
			],
			[
				"getTot",
				"getTotalFieldHeight"
			],
			[
				"paus",
				"pauseMenuBackground"
			],
			[
				"getColl",
				"GetCollisionTimeResult"
			],
			[
				"ne",
				"negativeCameraP"
			],
			[
				"child",
				"childYOffs"
			],
			[
				"removeF",
				"removeFieldsIfSet"
			],
			[
				"twea",
				"tweakCost"
			],
			[
				"pene",
				"ignoreAllPenetratingEntities"
			],
			[
				"on",
				"onScreenRight"
			],
			[
				"EntityType_p",
				"EntityType_pickupField"
			],
			[
				"triang",
				"triangleSize"
			],
			[
				"fragmentS",
				"fragmentShaderSourceFileName"
			],
			[
				"vertexS",
				"vertexShaderSourceFileName"
			],
			[
				"getAnim",
				"getAnimationDuration"
			],
			[
				"getRend",
				"getRenderablePointLight"
			],
			[
				"light",
				"lightDistanceSquared"
			],
			[
				"un",
				"uniformNamePtr"
			],
			[
				"pixe",
				"pixelsPerMeter"
			],
			[
				"getA",
				"getAnimationDuration"
			],
			[
				"hitbox",
				"hitboxFreeList"
			],
			[
				"paritio",
				"partitionXOffs"
			],
			[
				"partitionC",
				"partitionCenterX"
			],
			[
				"solid",
				"solidGridSquareSize"
			],
			[
				"solidG",
				"solidGridSquareSize"
			],
			[
				"grou",
				"groundReferenceList"
			],
			[
				"colliderH",
				"colliderHitboxList"
			],
			[
				"gr",
				"groundReferenceList"
			],
			[
				"keybo",
				"keyboardFieldChildren"
			],
			[
				"newP",
				"newParentFieldIndex"
			],
			[
				"En",
				"EntityFlag_shootsAtTarget"
			],
			[
				"px",
				"pixelsPerMeter"
			],
			[
				"should",
				"shouldChangeDirection"
			],
			[
				"hor",
				"horizontalCollision"
			],
			[
				"EntityF",
				"EntityFlag_consoleSelected"
			],
			[
				"EntityFlag_C",
				"EntityFlag_consoleSelected"
			],
			[
				"ConsoleF",
				"ConsoleField_Float"
			],
			[
				"ME",
				"PIXELS_PER_METER"
			],
			[
				"drwa",
				"drawFilledRectangle"
			],
			[
				"E",
				"EntityFlag_facesLeft"
			],
			[
				"getR",
				"getRectHeight"
			],
			[
				"up",
				"upJustPressed"
			],
			[
				"leftMouseB",
				"leftMouseButtonJustPressed"
			],
			[
				"ho",
				"horizontalCollision"
			],
			[
				"max",
				"maxCollisionTime"
			],
			[
				"xM",
				"xMoveAcceleration"
			],
			[
				"x",
				"xMoveAcceleration"
			],
			[
				"ENTI",
				"EntityFlag"
			],
			[
				"SDL_R",
				"SDL_Renderer"
			],
			[
				"col",
				"collisionTime"
			],
			[
				"colli",
				"collisionTime"
			],
			[
				"min",
				"minkowskiSum"
			],
			[
				"add",
				"addRadiusTo"
			],
			[
				"Entity",
				"EntityType_Player"
			],
			[
				"entiti",
				"entityIndex"
			],
			[
				"entity",
				"entityIndex"
			],
			[
				"num",
				"numEntities"
			],
			[
				"src",
				"srcRect"
			],
			[
				"tile",
				"tileRows"
			],
			[
				"push",
				"pushIntoArena_"
			],
			[
				"til",
				"tileWidth"
			],
			[
				"at",
				"atlasWidth"
			],
			[
				"atl",
				"atlasHeight"
			],
			[
				"load",
				"loadDelmittedStringIntoBuffer"
			],
			[
				"atlas",
				"atlasFileName"
			],
			[
				"center",
				"centerToPoint"
			],
			[
				"getD",
				"getDiamondRotation"
			],
			[
				"cen",
				"centerToMid"
			],
			[
				"sand",
				"sandbags"
			],
			[
				"SA",
				"SANDBAG"
			],
			[
				"MAX",
				"MAX_SANDBAGS"
			],
			[
				"ENTITY",
				"EntityType"
			],
			[
				"MAX_",
				"MAX_SANDBAGS"
			],
			[
				"san",
				"sandbags"
			],
			[
				"sandbag",
				"sandbagWidth"
			],
			[
				"PI",
				"PIXELS_PER_METER"
			],
			[
				"br",
				"br"
			],
			[
				"TA",
				"TANK_SIZE_METERS"
			],
			[
				"T",
				"TILE_SIZE_METERS"
			],
			[
				"WIND",
				"WINDOW_HEIGHT"
			],
			[
				"WIN",
				"WINDOW_WIDTH"
			],
			[
				"TANK",
				"TANK_SIZE_METERS"
			],
			[
				"turre",
				"turretAngle"
			],
			[
				"leng",
				"lengthSq"
			],
			[
				"create",
				"createBullet"
			]
		]
	},
	"buffers":
	[
		{
			"file": "code/hackformer_renderer.cpp",
			"settings":
			{
				"buffer_size": 49956,
				"line_ending": "Windows"
			}
		},
		{
			"file": "build/stb_image.cpp",
			"settings":
			{
				"buffer_size": 220333,
				"line_ending": "Windows"
			}
		},
		{
			"file": "code/hackformer_types.h",
			"settings":
			{
				"buffer_size": 22454,
				"line_ending": "Windows"
			}
		},
		{
			"file": "code/hackformer.cpp",
			"settings":
			{
				"buffer_size": 44359,
				"line_ending": "Windows"
			}
		},
		{
			"file": "code/hackformer_entity.cpp",
			"settings":
			{
				"buffer_size": 163784,
				"line_ending": "Windows"
			}
		},
		{
			"file": "code/hackformer_editor.h",
			"settings":
			{
				"buffer_size": 1014,
				"line_ending": "Windows"
			}
		},
		{
			"file": "code/hackformer_consoleField.h",
			"settings":
			{
				"buffer_size": 4491,
				"line_ending": "Windows"
			}
		},
		{
			"file": "code/hackformer_entity.h",
			"settings":
			{
				"buffer_size": 4533,
				"line_ending": "Windows"
			}
		},
		{
			"file": "code/hackformer.h",
			"settings":
			{
				"buffer_size": 6705,
				"line_ending": "Windows"
			}
		},
		{
			"file": "code/hackformer_consoleField.cpp",
			"settings":
			{
				"buffer_size": 40475,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "Packages/User/test build 1.sublime-build",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "Package Control: ",
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"Package Control: ena",
				"Package Control: Enable Package"
			],
			[
				"Package Control: list",
				"Package Control: List Packages"
			],
			[
				"Package Control: in",
				"Package Control: Install Package"
			],
			[
				"Package Control: insta",
				"Package Control: Install Package"
			]
		],
		"width": 416.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/W/c++former/code",
		"/W/c++former/shaders"
	],
	"file_history":
	[
		"/W/c++former/code/hackformer_types.h",
		"/W/c++former/code/hackformer_entity.cpp",
		"/W/c++former/build/stb_image.cpp",
		"/C/Users/Vik/Downloads/handmade_hero_148_source/handmade_hero_day_148_source/code/handmade_render_group.h",
		"/C/Users/Vik/Downloads/handmade_hero_148_source/handmade_hero_day_148_source/code/handmade_optimized.cpp",
		"/C/Users/Vik/Downloads/handmade_hero_148_source/handmade_hero_day_148_source/code/handmade.h",
		"/C/Users/Vik/Downloads/handmade_hero_148_source/handmade_hero_day_148_source/code/handmade.cpp",
		"/C/Users/Vik/Downloads/handmade_hero_148_source/handmade_hero_day_148_source/code/handmade_render_group.cpp",
		"/W/c++former/code/hackformer.cpp",
		"/W/c++former/code/hackformer_editor.cpp",
		"/W/c++former/code/hackformer_save.cpp",
		"/W/c++former/res/shaders/forward.frag",
		"/W/c++former/code/hackformer.h",
		"/W/c++former/code/hackformer_save.h",
		"/W/c++former/code/hackformer_consoleField.cpp",
		"/W/c++former/code/hackformer_entity.h",
		"/W/c++former/code/hackformer_save_2.cpp",
		"/W/c++former/code/hackformer_editor.h",
		"/W/c++former/code/hackformer_renderer.cpp",
		"/W/c++former/code/hackformer_collisionDataTool.cpp",
		"/W/c++former/code/hackformer_packBuilder.cpp",
		"/W/c++former/code/hackformer_packBuilder.h",
		"/W/c++former/code/hackformer_math.h",
		"/W/c++former/code/hackformer_renderer.h",
		"/W/c++former/res/shaders/stencil.frag",
		"/W/c++former/res/shaders/basic.frag",
		"/W/c++former/res/shaders/basic.vert",
		"/W/c++former/res/shaders/forward.vert",
		"/C/Users/Vik/AppData/Roaming/Sublime Text 3/Packages/User/hackformer_pack_builder.sublime-build",
		"/W/c++former/code/hackformer_animationDisplayer.cpp",
		"/W/c++former/code/hackformer_anim",
		"/W/c++former/code/hackformer_consoleField.h",
		"/C/Users/Vik/AppData/Roaming/Sublime Text 3/Packages/User/hackformer_animation_displayer_tool_build.sublime-build",
		"/C/Users/Vik/AppData/Roaming/Sublime Text 3/Packages/User/hackformer_collision_data_tool_build.sublime-build",
		"/W/c++former/code/hackformer_animationBuilder.cpp",
		"/C/Users/Vik/AppData/Roaming/Sublime Text 3/Packages/User/hackformer_animation_builder.sublime-build",
		"/W/c++former/shaders/forward.frag",
		"/C/Users/Vik/AppData/Roaming/Sublime Text 3/Packages/HighlightBuildErrors/HighlightBuildErrors.sublime-settings",
		"/C/Users/Vik/AppData/Roaming/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/C/Users/Vik/AppData/Roaming/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
		"/W/c++former/code/hackformer_shared.h",
		"/C/Users/Vik/workspace/c++former/code/hackformer.cpp",
		"/C/Users/Vik/workspace/c++former/code/hackformer_consoleField.cpp",
		"/C/Users/Vik/AppData/Roaming/Sublime Text 3/Packages/User/hackformer_build.sublime-build",
		"/C/Users/Vik/AppData/Roaming/Sublime Text 3/Packages/User/hackformer_editor_build.sublime-build",
		"/C/Users/Vik/AppData/Local/Temp/Temp1_handmade_hero_day_132_source.zip/code/handmade.h",
		"/C/Users/Vik/workspace/c++former/code/hackformer_save.cpp",
		"/W/c++former/shaders/stencil.frag",
		"/W/c++former/shaders/basic.frag",
		"/C/Users/Vik/Desktop/hackformer alpha 4.02/shaders/forward.frag",
		"/W/c++former/shaders/forward.vert",
		"/W/c++former/shaders/basic.vert",
		"/C/Users/Vik/workspace/c++former/code/hackformer_save.h",
		"/C/Users/Vik/workspace/c++former/code/hackformer_entity.cpp",
		"/C/Users/Vik/workspace/c++former/code/hackformer_renderer.cpp",
		"/C/Users/Vik/workspace/android-stotra-apps/android-stotra-apps/settings.gradle",
		"/C/Users/Vik/workspace/android-stotra-apps/android-stotra-apps/build.gradle",
		"/W/android-stotra-apps/android-stotra-apps/UILibrary/build.gradle",
		"/W/android-stotra-apps/android-stotra-apps/settings.gradle",
		"/W/android-stotra-apps/android-stotra-apps/BhajanPlayer/build.gradle",
		"/W/android-stotra-apps/android-stotra-apps/build.gradle",
		"/W/android-stotra-apps/android-stotra-apps/local.properties",
		"/W/android-stotra-apps/android-stotra-apps/UILibrary/local.properties",
		"/W/android-stotra-apps/android-stotra-apps/Guru-Gita/build.gradle",
		"/W/android-stotra-apps/android-stotra-apps/Bhagavad-Gita/build.gradle",
		"/W/android-stotra-apps/android-stotra-apps/Vishnu-Sahasranamam/build.gradle",
		"/W/android-stotra-apps/android-stotra-apps/Shatashloki-Ramayana/build.gradle",
		"/W/android-stotra-apps/android-stotra-apps/Lalita-Sahasranamam/build.gradle",
		"/W/android-stotra-apps/android-stotra-apps/Kavacha-Manjari/build.gradle",
		"/W/android-stotra-apps/android-stotra-apps/Hanuman-Chalisa-Telugu/build.gradle",
		"/W/android-stotra-apps/android-stotra-apps/Hanuman-Chalisa-Tamil/build.gradle",
		"/W/android-stotra-apps/android-stotra-apps/Hanuman-Chalisa-Kannada/build.gradle",
		"/W/android-stotra-apps/android-stotra-apps/Hanuman-Chalisa/build.gradle",
		"/W/android-stotra-apps/android-stotra-apps/Hanuman-Chalisa-Hindi/build.gradle",
		"/W/android-stotra-apps/android-stotra-apps/Vishnu-Sahasranamam/settings.gradle",
		"/W/android-stotra-apps/local.properties",
		"/W/android-stotra-apps/android-stotra-apps/Bhagavad-Gita/project.properties",
		"/W/android-stotra-apps/settings.gradle",
		"/W/android-stotra-apps/android-stotra-apps/Bhagavad-Gita/local.properties",
		"/C/Users/Vik/Downloads/sources/Wav_File.jai",
		"/C/Users/Vik/Downloads/sources/demo.jai",
		"/C/Users/Vik/Downloads/sources/Build.jai",
		"/C/Users/Vik/Downloads/sources/Basic.jai",
		"/C/Users/Vik/Downloads/sources/Print.jai",
		"/C/Users/Vik/Downloads/sources/Mixer_Win32.jai",
		"/C/Users/Vik/Downloads/sources/Preload.jai",
		"/C/Users/Vik/Downloads/sources/stb_image.jai",
		"/C/Users/Vik/Downloads/sources/File.jai",
		"/C/Users/Vik/Downloads/sources/GL.jai",
		"/C/Users/Vik/Downloads/sources/Thread.jai",
		"/C/Users/Vik/Downloads/sources/Mixer.jai",
		"/C/Users/Vik/Downloads/sources/Math.jai",
		"/C/Users/Vik/Downloads/sources/Pool.jai",
		"/C/Users/Vik/AppData/Local/Temp/Temp1_iaca-win64.zip/iaca-win64/iacaMarks.h",
		"/C/Users/Vik/AppData/Roaming/Sublime Text 3/Packages/User/Default (Windows).sublime-keymap",
		"/C/Users/Vik/AppData/Roaming/Sublime Text 3/Packages/Default/Default (Windows).sublime-keymap",
		"/C/Users/Vik/Downloads/handmade_hero_038_source/handmade_hero_day_038_source/code/handmade_platform.h",
		"/C/Users/Vik/Downloads/handmade_hero_108_source/handmade_hero_day_108_source/code/handmade_render_group.cpp",
		"/C/Users/Vik/Downloads/handmade_hero_108_source/handmade_hero_day_108_source/code/handmade.cpp",
		"/C/Users/Vik/Downloads/handmade_hero_108_source/handmade_hero_day_108_source/code/win32_handmade.cpp",
		"/W/c++former/release/shaders/basic.frag",
		"/W/Dunjun/data/shaders/default.frag",
		"/C/Users/Vik/Downloads/pixel_exact/pixel_exact/glsl/simple.vert",
		"/C/Users/Vik/Downloads/pixel_exact/pixel_exact/glsl/simple.frag",
		"/W/Dunjun/code/Dunjun.cpp",
		"/C/Users/Vik/AppData/Local/Temp/Temp1_handmade_hero_day_093_source.zip/code/handmade_render_group.h",
		"/C/Users/Vik/AppData/Local/Temp/Temp1_handmade_hero_day_093_source.zip/code/handmade_render_group.cpp",
		"/W/c++former/shaders/basic.frag.txt",
		"/W/c++former/build/include/SOIL.h",
		"/W/c++former/code/hackformer_consolefield.h",
		"/C/Users/Vik/AppData/Local/Temp/Temp2_handmade_hero_day_075_source.zip/code/handmade_platform.h",
		"/C/Users/Vik/AppData/Local/Temp/Temp2_handmade_hero_day_075_source.zip/code/handmade.h",
		"/C/Users/Vik/AppData/Local/Temp/Temp2_handmade_hero_day_075_source.zip/code/handmade.cpp",
		"/W/c++former/code/hackformer_math.cpp",
		"/W/td/code/td_math.cpp",
		"/W/td/code/td_renderer.h",
		"/W/td/code/td_main.cpp",
		"/W/td/code/td_renderer.cpp",
		"/W/td/code/td_main.h",
		"/C/Users/Vik/AppData/Local/Temp/Temp2_handmade_hero_day_075_source.zip/code/handmade_math.h",
		"/W/td/code/td_math.h",
		"/C/Users/Vik/AppData/Roaming/Sublime Text 3/Packages/User/td_build.sublime-build",
		"/W/td/code/hackformer.h",
		"/W/td/code/hackformer.cpp",
		"/C/Users/Vik/AppData/Local/Temp/Temp1_handmade_hero_day_075_source.zip/code/handmade_sim_region.cpp",
		"/C/Users/Vik/AppData/Local/Temp/Temp1_handmade_hero_day_075_source.zip/code/handmade_entity.h",
		"/C/Users/Vik/AppData/Local/Temp/Temp1_handmade_hero_day_075_source.zip/code/handmade_entity.cpp",
		"/C/Users/Vik/AppData/Local/Temp/Temp1_handmade_hero_day_075_source.zip/code/handmade.cpp"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"defaultClip",
			"TTF_RenderText_Blended",
			"TTF_Font*",
			"TTF_FONT*",
			"STB_IMAGE_IMPLEMENTATION",
			"stbi_load_from_file",
			"lib",
			"cstdlib",
			"STBI_FREE",
			"STB_IMAGE_IMPLEMENTATION",
			"stbi_load_from_file",
			"stbi_image_free",
			"DrawRectangleQuickly",
			"DrawRectangle",
			"STB_IMAGE_STATIC",
			"seekToAssetPos",
			"createTexFromSurface",
			"EntityType_player: {",
			"sprintf",
			"camera",
			"ConsoleField_movesB",
			"ambient = ",
			"level_2",
			"mapFilenames",
			"loadLevel",
			"loadHackMap",
			"getTotalFieldHeight",
			"dock",
			"drawCollision",
			"editor",
			"SAVE_BINARY",
			"show5",
			"if(spec->index",
			"backgroundTextures",
			"streamMessages",
			"input->r",
			"EntityType_checkpoint",
			"toggleCheckpoint",
			"getEntityByRef",
			"subArena",
			"readAnimation",
			"ConsoleFlag_selected",
			"readGameFromArena",
			"createIostream",
			"streamRefNode",
			"refNode",
			"initSpatialPartition",
			"chunks",
			"messages",
			"readElem",
			"readR2",
			"readV3",
			"readV2",
			"readString",
			"readU32",
			"readS32",
			"readDouble",
			"pushElem",
			"readElemPtr",
			"writer",
			"Writer*",
			"writer",
			"writeV2",
			"writeR2",
			"witer,",
			"writeElem(writer, -1);",
			"writeV3",
			"writeString",
			"writeU32",
			"file",
			"FILE* file",
			"writeV2(file",
			"writeDouble(file",
			"writeS32(",
			"writeS32(file",
			");\n",
			"addeditor",
			"messages",
			"readMessages",
			"writeString",
			"entity->tex",
			"messages",
			"addEntity",
			"pushStruct",
			"selectedEntitySpecIndex",
			"clickConsoleButton",
			"button",
			"clickHandled",
			"lightField",
			"movesBack",
			"102",
			"load",
			"loadPNG",
			"assets",
			"loadPNG",
			"res/",
			"Assets",
			"MusicState",
			"45",
			"SDL_Free",
			"final_sprite",
			"TexId",
			"AnimId",
			"TexId",
			"AnimID",
			"TexID",
			"collisionPointsCount",
			"pushPointLight",
			"isProjectile",
			"ConsoleField_killsOnHit",
			"EntityType_pickupField",
			"{\n",
			"getBottomFieldP",
			"ConsoleField_gives",
			"ConsoleField_body",
			"isSpawnPossible",
			"targetRefs",
			"}\n",
			"moveTowardsTargetParabolic",
			"friction",
			"ConsoleField_isShootTarget",
			"ConsoleField_isShooTTarget",
			"lightColor",
			"spawnField",
			"pushSpotLight",
			"scanField",
			"canEntityRotate",
			"addTrawlerBolt"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"readElem",
			"readStr",
			"readElem",
			"iostream",
			"IOStream*",
			"iostream",
			"writeElem",
			"writer,",
			"writeValue(witer, s32, -1);",
			"writeElem",
			"writeStr",
			"writeElem",
			"writer",
			"Writer* writer",
			"writeElem(writer",
			"writeElem(",
			"writeElem(writer",
			"writeS32(writer",
			"Asset",
			"AnimId",
			"TexId",
			"Texture",
			"s32",
			"loadPNGTexture(gameState->renderGroup",
			"renderGroup",
			"",
			"dataToCopy->",
			"input->",
			"/",
			"y",
			"gameState->fieldSpec.",
			"result",
			"s32",
			"s32 ",
			"input->",
			"result.shader.program",
			"tile",
			"result->",
			"double",
			"entity",
			"setFlags",
			"texture->",
			"animTime",
			"uint",
			"result",
			"uint32",
			"arrayCount",
			"tileX"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "code/hackformer_renderer.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 49956,
						"regions":
						{
						},
						"selection":
						[
							[
								14738,
								14746
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 6939.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "build/stb_image.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 220333,
						"regions":
						{
						},
						"selection":
						[
							[
								278,
								278
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "code/hackformer_types.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 22454,
						"regions":
						{
						},
						"selection":
						[
							[
								244,
								244
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "code/hackformer.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 44359,
						"regions":
						{
						},
						"selection":
						[
							[
								42654,
								42654
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 16991.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "code/hackformer_entity.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 163784,
						"regions":
						{
						},
						"selection":
						[
							[
								46428,
								46438
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 21234.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				}
			]
		},
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 5,
					"file": "code/hackformer_editor.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1014,
						"regions":
						{
						},
						"selection":
						[
							[
								1011,
								984
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": -0.0,
						"translation.y": 315.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "code/hackformer_consoleField.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4491,
						"regions":
						{
						},
						"selection":
						[
							[
								643,
								643
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "code/hackformer_entity.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4533,
						"regions":
						{
						},
						"selection":
						[
							[
								534,
								534
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "code/hackformer.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6705,
						"regions":
						{
						},
						"selection":
						[
							[
								1832,
								1832
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 592.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "code/hackformer_consoleField.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 40475,
						"regions":
						{
						},
						"selection":
						[
							[
								20578,
								20578
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 10334.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.522519714408,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 220.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/User/hackformer_build.sublime-build",
	"project": "hackformer_project.sublime-project",
	"replace":
	{
		"height": 62.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"W:\\Dunjun\\Dunjun_workspace.sublime-workspace"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"square",
				"square"
			],
			[
				"canF",
				"canFieldBeMoved"
			],
			[
				"dst",
				"dstSq"
			],
			[
				"main",
				"main"
			],
			[
				"pintI",
				"pointInsideRect"
			],
			[
				"pushT",
				"pushTexture"
			],
			[
				"move",
				"moveRaw"
			],
			[
				"moveRaw",
				"moveRaw"
			],
			[
				"addBa",
				"addBackground"
			]
		],
		"width": 392.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 150.0,
	"status_bar_visible": false,
	"template_settings":
	{
	}
}
