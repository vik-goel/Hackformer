{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"barC",
				"barCircleTex"
			],
			[
				"valueb",
				"valueBackgroundPenetration"
			],
			[
				"valueB",
				"valueBackgroundPenetration"
			],
			[
				"gett",
				"getTextPadding"
			],
			[
				"nu",
				"numChildren"
			],
			[
				"valueS",
				"valueSize"
			],
			[
				"as",
				"aspectRatio"
			],
			[
				"pushT",
				"pushTexture"
			],
			[
				"field",
				"fieldSize"
			],
			[
				"getTot",
				"getTotalFieldHeight"
			],
			[
				"paus",
				"pauseMenuBackground"
			],
			[
				"getColl",
				"GetCollisionTimeResult"
			],
			[
				"ne",
				"negativeCameraP"
			],
			[
				"child",
				"childYOffs"
			],
			[
				"removeF",
				"removeFieldsIfSet"
			],
			[
				"twea",
				"tweakCost"
			],
			[
				"pene",
				"ignoreAllPenetratingEntities"
			],
			[
				"on",
				"onScreenRight"
			],
			[
				"EntityType_p",
				"EntityType_pickupField"
			],
			[
				"triang",
				"triangleSize"
			],
			[
				"ignore",
				"ignoreAllPenetratingEntities"
			],
			[
				"fragmentS",
				"fragmentShaderSourceFileName"
			],
			[
				"vertexS",
				"vertexShaderSourceFileName"
			],
			[
				"getAnim",
				"getAnimationDuration"
			],
			[
				"getRend",
				"getRenderablePointLight"
			],
			[
				"light",
				"lightDistanceSquared"
			],
			[
				"un",
				"uniformNamePtr"
			],
			[
				"pixe",
				"pixelsPerMeter"
			],
			[
				"getA",
				"getAnimationDuration"
			],
			[
				"hitbox",
				"hitboxFreeList"
			],
			[
				"paritio",
				"partitionXOffs"
			],
			[
				"partitionC",
				"partitionCenterX"
			],
			[
				"solid",
				"solidGridSquareSize"
			],
			[
				"solidG",
				"solidGridSquareSize"
			],
			[
				"grou",
				"groundReferenceList"
			],
			[
				"colliderH",
				"colliderHitboxList"
			],
			[
				"gr",
				"groundReferenceList"
			],
			[
				"keybo",
				"keyboardFieldChildren"
			],
			[
				"newP",
				"newParentFieldIndex"
			],
			[
				"En",
				"EntityFlag_shootsAtTarget"
			],
			[
				"px",
				"pixelsPerMeter"
			],
			[
				"should",
				"shouldChangeDirection"
			],
			[
				"hor",
				"horizontalCollision"
			],
			[
				"EntityF",
				"EntityFlag_consoleSelected"
			],
			[
				"EntityFlag_C",
				"EntityFlag_consoleSelected"
			],
			[
				"ConsoleF",
				"ConsoleField_Float"
			],
			[
				"ME",
				"PIXELS_PER_METER"
			],
			[
				"get",
				"getAnimationFrame"
			],
			[
				"drwa",
				"drawFilledRectangle"
			],
			[
				"E",
				"EntityFlag_facesLeft"
			],
			[
				"getR",
				"getRectHeight"
			],
			[
				"up",
				"upJustPressed"
			],
			[
				"leftMouseB",
				"leftMouseButtonJustPressed"
			],
			[
				"ho",
				"horizontalCollision"
			],
			[
				"max",
				"maxCollisionTime"
			],
			[
				"xM",
				"xMoveAcceleration"
			],
			[
				"x",
				"xMoveAcceleration"
			],
			[
				"ENTI",
				"EntityFlag"
			],
			[
				"SDL_R",
				"SDL_Renderer"
			],
			[
				"coll",
				"collisionTime"
			],
			[
				"col",
				"collisionTime"
			],
			[
				"colli",
				"collisionTime"
			],
			[
				"min",
				"minkowskiSum"
			],
			[
				"add",
				"addRadiusTo"
			],
			[
				"Entity",
				"EntityType_Player"
			],
			[
				"entiti",
				"entityIndex"
			],
			[
				"entity",
				"entityIndex"
			],
			[
				"num",
				"numEntities"
			],
			[
				"src",
				"srcRect"
			],
			[
				"tile",
				"tileRows"
			],
			[
				"push",
				"pushIntoArena_"
			],
			[
				"til",
				"tileWidth"
			],
			[
				"at",
				"atlasWidth"
			],
			[
				"atl",
				"atlasHeight"
			],
			[
				"load",
				"loadDelmittedStringIntoBuffer"
			],
			[
				"atlas",
				"atlasFileName"
			],
			[
				"center",
				"centerToPoint"
			],
			[
				"getD",
				"getDiamondRotation"
			],
			[
				"cen",
				"centerToMid"
			],
			[
				"draw",
				"drawDiamond"
			],
			[
				"sand",
				"sandbags"
			],
			[
				"SA",
				"SANDBAG"
			],
			[
				"MAX",
				"MAX_SANDBAGS"
			],
			[
				"ENTITY",
				"EntityType"
			],
			[
				"MAX_",
				"MAX_SANDBAGS"
			],
			[
				"san",
				"sandbags"
			],
			[
				"sandbag",
				"sandbagWidth"
			],
			[
				"PI",
				"PIXELS_PER_METER"
			],
			[
				"br",
				"br"
			],
			[
				"TA",
				"TANK_SIZE_METERS"
			],
			[
				"T",
				"TILE_SIZE_METERS"
			],
			[
				"WIND",
				"WINDOW_HEIGHT"
			],
			[
				"WIN",
				"WINDOW_WIDTH"
			],
			[
				"TANK",
				"TANK_SIZE_METERS"
			],
			[
				"turre",
				"turretAngle"
			],
			[
				"leng",
				"lengthSq"
			],
			[
				"create",
				"createBullet"
			],
			[
				"dstRect",
				"dstRectOffsetX"
			],
			[
				"turret",
				"turretTexHeight"
			],
			[
				"P",
				"PIXELS_PER_METER"
			],
			[
				"TANK_S",
				"TANK_SIZE_METERS"
			],
			[
				"Til",
				"TILE_SIZE_PIXELS"
			],
			[
				"TILE",
				"TILE_SIZE_PIXELS"
			]
		]
	},
	"buffers":
	[
		{
			"file": "/C/Users/Vik/workspace/c++former/code/hackformer.cpp",
			"settings":
			{
				"buffer_size": 42305,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/Users/Vik/workspace/c++former/code/hackformer_consoleField.cpp",
			"settings":
			{
				"buffer_size": 33145,
				"line_ending": "Windows"
			}
		},
		{
			"file": "code/hackformer_entity.cpp",
			"settings":
			{
				"buffer_size": 95506,
				"line_ending": "Windows"
			}
		},
		{
			"file": "code/hackformer_renderer.cpp",
			"settings":
			{
				"buffer_size": 49046,
				"line_ending": "Windows"
			}
		},
		{
			"file": "code/hackformer_save.cpp",
			"settings":
			{
				"buffer_size": 26279,
				"line_ending": "Windows"
			}
		},
		{
			"file": "code/hackformer_entity.h",
			"settings":
			{
				"buffer_size": 3806,
				"line_ending": "Windows"
			}
		},
		{
			"file": "code/hackformer_renderer.h",
			"settings":
			{
				"buffer_size": 4033,
				"line_ending": "Windows"
			}
		},
		{
			"file": "code/hackformer_consoleField.h",
			"settings":
			{
				"buffer_size": 3127,
				"line_ending": "Windows"
			}
		},
		{
			"file": "code/hackformer.h",
			"settings":
			{
				"buffer_size": 7784,
				"line_ending": "Windows"
			}
		},
		{
			"file": "code/hackformer_math.h",
			"settings":
			{
				"buffer_size": 8870,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "Packages/User/test build 1.sublime-build",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 127.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"Package Control: ena",
				"Package Control: Enable Package"
			],
			[
				"Package Control: list",
				"Package Control: List Packages"
			],
			[
				"Package Control: in",
				"Package Control: Install Package"
			],
			[
				"Package Control: insta",
				"Package Control: Install Package"
			]
		],
		"width": 416.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/W/c++former/code",
		"/W/c++former/shaders"
	],
	"file_history":
	[
		"/C/Users/Vik/AppData/Local/Temp/Temp1_handmade_hero_day_132_source.zip/code/handmade.h",
		"/C/Users/Vik/workspace/c++former/code/hackformer_save.cpp",
		"/W/c++former/shaders/stencil.frag",
		"/W/c++former/shaders/basic.frag",
		"/C/Users/Vik/workspace/c++former/code/hackformer.cpp",
		"/C/Users/Vik/Desktop/hackformer alpha 4.02/shaders/forward.frag",
		"/W/c++former/code/hackformer_consoleField.cpp",
		"/C/Users/Vik/workspace/c++former/code/hackformer_consoleField.cpp",
		"/W/c++former/code/hackformer.cpp",
		"/W/c++former/shaders/forward.vert",
		"/W/c++former/shaders/forward.frag",
		"/W/c++former/shaders/basic.vert",
		"/C/Users/Vik/workspace/c++former/code/hackformer_save.h",
		"/C/Users/Vik/workspace/c++former/code/hackformer_entity.cpp",
		"/C/Users/Vik/workspace/c++former/code/hackformer_renderer.cpp",
		"/W/c++former/code/hackformer_renderer.h",
		"/W/c++former/code/hackformer_renderer.cpp",
		"/C/Users/Vik/workspace/android-stotra-apps/android-stotra-apps/settings.gradle",
		"/C/Users/Vik/workspace/android-stotra-apps/android-stotra-apps/build.gradle",
		"/W/android-stotra-apps/android-stotra-apps/UILibrary/build.gradle",
		"/W/android-stotra-apps/android-stotra-apps/settings.gradle",
		"/W/android-stotra-apps/android-stotra-apps/BhajanPlayer/build.gradle",
		"/W/android-stotra-apps/android-stotra-apps/build.gradle",
		"/W/android-stotra-apps/android-stotra-apps/local.properties",
		"/W/android-stotra-apps/android-stotra-apps/UILibrary/local.properties",
		"/W/android-stotra-apps/android-stotra-apps/Guru-Gita/build.gradle",
		"/W/android-stotra-apps/android-stotra-apps/Bhagavad-Gita/build.gradle",
		"/W/android-stotra-apps/android-stotra-apps/Vishnu-Sahasranamam/build.gradle",
		"/W/android-stotra-apps/android-stotra-apps/Shatashloki-Ramayana/build.gradle",
		"/W/android-stotra-apps/android-stotra-apps/Lalita-Sahasranamam/build.gradle",
		"/W/android-stotra-apps/android-stotra-apps/Kavacha-Manjari/build.gradle",
		"/W/android-stotra-apps/android-stotra-apps/Hanuman-Chalisa-Telugu/build.gradle",
		"/W/android-stotra-apps/android-stotra-apps/Hanuman-Chalisa-Tamil/build.gradle",
		"/W/android-stotra-apps/android-stotra-apps/Hanuman-Chalisa-Kannada/build.gradle",
		"/W/android-stotra-apps/android-stotra-apps/Hanuman-Chalisa/build.gradle",
		"/W/android-stotra-apps/android-stotra-apps/Hanuman-Chalisa-Hindi/build.gradle",
		"/W/android-stotra-apps/android-stotra-apps/Vishnu-Sahasranamam/settings.gradle",
		"/W/android-stotra-apps/local.properties",
		"/W/c++former/code/hackformer_entity.cpp",
		"/W/android-stotra-apps/android-stotra-apps/Bhagavad-Gita/project.properties",
		"/W/android-stotra-apps/settings.gradle",
		"/W/android-stotra-apps/android-stotra-apps/Bhagavad-Gita/local.properties",
		"/W/c++former/code/hackformer_consoleField.h",
		"/C/Users/Vik/Downloads/sources/Wav_File.jai",
		"/C/Users/Vik/Downloads/sources/demo.jai",
		"/C/Users/Vik/Downloads/sources/Build.jai",
		"/C/Users/Vik/Downloads/sources/Basic.jai",
		"/C/Users/Vik/Downloads/sources/Print.jai",
		"/C/Users/Vik/Downloads/sources/Mixer_Win32.jai",
		"/C/Users/Vik/Downloads/sources/Preload.jai",
		"/C/Users/Vik/Downloads/sources/stb_image.jai",
		"/C/Users/Vik/Downloads/sources/File.jai",
		"/C/Users/Vik/Downloads/sources/GL.jai",
		"/C/Users/Vik/Downloads/sources/Thread.jai",
		"/C/Users/Vik/Downloads/sources/Mixer.jai",
		"/C/Users/Vik/Downloads/sources/Math.jai",
		"/C/Users/Vik/Downloads/sources/Pool.jai",
		"/W/c++former/code/hackformer_math.h",
		"/W/c++former/code/hackformer_entity.h",
		"/W/c++former/code/hackformer.h",
		"/C/Users/Vik/AppData/Local/Temp/Temp1_iaca-win64.zip/iaca-win64/iacaMarks.h",
		"/C/Users/Vik/AppData/Roaming/Sublime Text 3/Packages/User/Default (Windows).sublime-keymap",
		"/C/Users/Vik/AppData/Roaming/Sublime Text 3/Packages/Default/Default (Windows).sublime-keymap",
		"/C/Users/Vik/Downloads/handmade_hero_038_source/handmade_hero_day_038_source/code/handmade_platform.h",
		"/C/Users/Vik/Downloads/handmade_hero_108_source/handmade_hero_day_108_source/code/handmade_render_group.cpp",
		"/C/Users/Vik/Downloads/handmade_hero_108_source/handmade_hero_day_108_source/code/handmade.cpp",
		"/C/Users/Vik/Downloads/handmade_hero_108_source/handmade_hero_day_108_source/code/win32_handmade.cpp",
		"/W/c++former/release/shaders/basic.frag",
		"/W/Dunjun/data/shaders/default.frag",
		"/C/Users/Vik/Downloads/pixel_exact/pixel_exact/glsl/simple.vert",
		"/C/Users/Vik/Downloads/pixel_exact/pixel_exact/glsl/simple.frag",
		"/W/Dunjun/code/Dunjun.cpp",
		"/C/Users/Vik/AppData/Local/Temp/Temp1_handmade_hero_day_093_source.zip/code/handmade_render_group.h",
		"/C/Users/Vik/AppData/Local/Temp/Temp1_handmade_hero_day_093_source.zip/code/handmade_render_group.cpp",
		"/W/c++former/shaders/basic.frag.txt",
		"/W/c++former/build/include/SOIL.h",
		"/W/c++former/code/hackformer_consolefield.h",
		"/C/Users/Vik/AppData/Local/Temp/Temp2_handmade_hero_day_075_source.zip/code/handmade_platform.h",
		"/C/Users/Vik/AppData/Local/Temp/Temp2_handmade_hero_day_075_source.zip/code/handmade.h",
		"/C/Users/Vik/AppData/Local/Temp/Temp2_handmade_hero_day_075_source.zip/code/handmade.cpp",
		"/W/c++former/code/hackformer_math.cpp",
		"/W/td/code/td_math.cpp",
		"/W/td/code/td_renderer.h",
		"/W/td/code/td_main.cpp",
		"/W/td/code/td_renderer.cpp",
		"/W/td/code/td_main.h",
		"/C/Users/Vik/AppData/Local/Temp/Temp2_handmade_hero_day_075_source.zip/code/handmade_math.h",
		"/W/td/code/td_math.h",
		"/C/Users/Vik/AppData/Roaming/Sublime Text 3/Packages/User/td_build.sublime-build",
		"/W/td/code/hackformer.h",
		"/W/td/code/hackformer.cpp",
		"/C/Users/Vik/AppData/Local/Temp/Temp1_handmade_hero_day_075_source.zip/code/handmade_sim_region.cpp",
		"/C/Users/Vik/AppData/Local/Temp/Temp1_handmade_hero_day_075_source.zip/code/handmade_entity.h",
		"/C/Users/Vik/AppData/Local/Temp/Temp1_handmade_hero_day_075_source.zip/code/handmade_entity.cpp",
		"/C/Users/Vik/AppData/Local/Temp/Temp1_handmade_hero_day_075_source.zip/code/handmade.cpp",
		"/W/c++former/build/include/SDL_ttf.h",
		"/W/c++former/build/include/begin_code.h",
		"/C/Users/Vik/AppData/Roaming/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/C/Users/Vik/Downloads/handmade_hero_038_source/handmade_hero_day_038_source/code/handmade.h",
		"/C/Users/Vik/Downloads/handmade_hero_038_source/handmade_hero_day_038_source/code/handmade.cpp",
		"/C/Users/Vik/AppData/Roaming/Sublime Text 3/Packages/HighlightBuildErrors/HighlightBuildErrors.sublime-settings",
		"/C/Users/Vik/AppData/Roaming/Sublime Text 3/Packages/User/SublimeLinter.sublime-settings",
		"/C/Users/Vik/AppData/Roaming/Sublime Text 3/Packages/User/test build 1.sublime-build",
		"/W/c++former/hackformer.cpp",
		"/W/c++former/hackformer_math.cpp",
		"/W/c++former/main.cpp",
		"/W/rewind_shooter/main.cpp",
		"/C/Users/Vik/AppData/Local/Temp/Temp1_handmade_hero_day_060_source.zip/code/handmade.cpp",
		"/C/Users/Vik/AppData/Local/Temp/Temp1_handmade_hero_day_060_source.zip/code/handmade.h",
		"/C/Users/Vik/AppData/Local/Temp/Temp1_handmade_hero_day_060_source.zip/code/handmade_intrinsics.h",
		"/C/Users/Vik/AppData/Local/Temp/Temp1_handmade_hero_day_060_source.zip/code/handmade_math.h",
		"/C/Users/Vik/AppData/Local/Temp/Temp1_handmade_hero_day_060_source.zip/code/linux_handmade.cpp",
		"/C/Users/Vik/AppData/Local/Temp/Temp1_handmade_hero_day_060_source.zip/code/handmade_random.h",
		"/C/Users/Vik/AppData/Local/Temp/Temp1_handmade_hero_day_052_source.zip/code/handmade.cpp",
		"/W/rewind_shooter/build/include/SDL.h",
		"/W/FacebookHackerCup2015/NewYearsResolution/main.cpp",
		"/C/Users/Vik/Downloads/handmade_hero_038_source/handmade_hero_day_038_source/code/win32_handmade.cpp",
		"/C/Users/Vik/Downloads/01_hello_SDL/01_hello_SDL/01_hello_SDL.cpp",
		"/C/Users/Vik/Desktop/test.c",
		"/C/Users/Vik/AppData/Roaming/Sublime Text 3/Packages/Default/Preferences.sublime-settings"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"getSaveFilePath",
			"(bool32",
			"createArena",
			"updateAndDrawButton",
			"clearRenderElemClipRect",
			"setRenderHeaderType",
			"sortPtrs",
			"group->drawingQuads",
			"glUseP",
			"bindShader",
			"glEnd",
			"glBegin",
			"animCounter += dtForFrame",
			"acceptButtonC",
			"acceptB",
			"moveTo",
			"centerCam",
			"animCounter",
			"input->pause",
			"pause",
			"paused",
			"case B",
			"drawConsoleT",
			"drawConsoleTriangle",
			"isTileT",
			"drawConsoleT",
			"EntityType_tile",
			"drawValueA",
			"clickHandled = false",
			"cancelB",
			"cancel",
			"blueE",
			"blueEn",
			"createA",
			"gravityTex",
			"dock->",
			"updateAnd",
			"gameSTate->renderGroup",
			"dock",
			"loadPNGT",
			"stand2",
			"res/",
			"dock/do",
			"drawFilledStencil",
			"createShader",
			"readChar",
			"tileAtlas",
			"dataIndex",
			"loadedData.",
			"chunk",
			"readMessages",
			"keycode",
			"data->fileN",
			";\n",
			"writeString",
			";\n",
			"writeConsoleField",
			"currentAnim",
			"gameState",
			"hasClipRect",
			"centerCameraAround",
			"gameState->input.",
			"ConsoleField_cameraFollows",
			"ConsoleFIeld_shoots",
			"dt > 0",
			"ConsoleField_cameraF",
			"drawEnt",
			"anim",
			"field->childYOffs",
			"drawOutlinedConsoleBox",
			"loadPNG",
			"\\",
			");\n",
			"swapFIeldP =",
			"paused",
			"_W",
			"get_wav_header",
			"struct",
			"serialize_simple",
			"use_preexisting_code",
			"removeFromP",
			"#if 0",
			"ConsoleFIeld_followsW",
			"drawDashedLine",
			"x",
			"followsW",
			"follows",
			"startPos",
			"moveTowardsW",
			"movementField",
			"ConsoleField_seeks",
			"newIndex",
			"mouse",
			"drawConsoleT",
			"addField",
			"right",
			"consoleFont",
			"tweakCost",
			"int",
			"moveField(",
			"moveField",
			"#if 0",
			"entity->p.y =",
			"entity->p.x =",
			"entity->p =",
			"chunkSize",
			"ConsoleField_moves",
			"#if 0",
			">= 2",
			">= ",
			">= 2",
			"getTota",
			"calcFieldPositions",
			"moveToE",
			"addField",
			"getBot",
			"		\n",
			"fieldSkip",
			"refNode(",
			"entity->numFields",
			"EntityType_pickupField",
			"_s",
			"#if 0",
			"moveTime",
			"gravity",
			"moveField",
			"//",
			"only "
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"renderGroup",
			"",
			"dataToCopy->",
			"input->",
			"/",
			"y",
			"gameState->fieldSpec.",
			"result",
			"s32",
			"s32 ",
			"input->",
			"result.shader.program",
			"tile",
			"result->",
			"double",
			"entity",
			"setFlags",
			"texture->",
			"animTime",
			"uint",
			"result",
			"uint32",
			"arrayCount",
			"tileX"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/C/Users/Vik/workspace/c++former/code/hackformer.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 42305,
						"regions":
						{
						},
						"selection":
						[
							[
								25776,
								25776
							]
						],
						"settings":
						{
							"history_list_is_closing": true,
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 10812.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/C/Users/Vik/workspace/c++former/code/hackformer_consoleField.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 33145,
						"regions":
						{
						},
						"selection":
						[
							[
								31677,
								31677
							]
						],
						"settings":
						{
							"history_list_is_closing": true,
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 13812.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "code/hackformer_entity.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 95506,
						"regions":
						{
						},
						"selection":
						[
							[
								8615,
								8615
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4200.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "code/hackformer_renderer.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 49046,
						"regions":
						{
						},
						"selection":
						[
							[
								30016,
								30016
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 14148.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "code/hackformer_save.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 26279,
						"regions":
						{
						},
						"selection":
						[
							[
								24165,
								24165
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 12282.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				}
			]
		},
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 5,
					"file": "code/hackformer_entity.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3806,
						"regions":
						{
						},
						"selection":
						[
							[
								2332,
								2332
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1485.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "code/hackformer_renderer.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4033,
						"regions":
						{
						},
						"selection":
						[
							[
								3642,
								3642
							]
						],
						"settings":
						{
							"history_list_is_closing": true,
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3024.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "code/hackformer_consoleField.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3127,
						"regions":
						{
						},
						"selection":
						[
							[
								3125,
								3125
							]
						],
						"settings":
						{
							"history_list_is_closing": true,
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1470.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "code/hackformer.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7784,
						"regions":
						{
						},
						"selection":
						[
							[
								1496,
								1496
							]
						],
						"settings":
						{
							"history_list_is_closing": true,
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 433.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "code/hackformer_math.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8870,
						"regions":
						{
						},
						"selection":
						[
							[
								8870,
								8870
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 6952.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 22.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.513665547741,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 250.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "hackformer_project.sublime-project",
	"replace":
	{
		"height": 62.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"W:\\Dunjun\\Dunjun_workspace.sublime-workspace"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"square",
				"square"
			],
			[
				"canF",
				"canFieldBeMoved"
			],
			[
				"dst",
				"dstSq"
			],
			[
				"main",
				"main"
			],
			[
				"pintI",
				"pointInsideRect"
			],
			[
				"pushT",
				"pushTexture"
			],
			[
				"move",
				"moveRaw"
			],
			[
				"moveRaw",
				"moveRaw"
			],
			[
				"addBa",
				"addBackground"
			]
		],
		"width": 392.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 150.0,
	"status_bar_visible": false,
	"template_settings":
	{
	}
}
