{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"fragmentS",
				"fragmentShaderSourceFileName"
			],
			[
				"vertexS",
				"vertexShaderSourceFileName"
			],
			[
				"getAnim",
				"getAnimationDuration"
			],
			[
				"getRend",
				"getRenderablePointLight"
			],
			[
				"light",
				"lightDistanceSquared"
			],
			[
				"un",
				"uniformNamePtr"
			],
			[
				"pixe",
				"pixelsPerMeter"
			],
			[
				"getA",
				"getAnimationDuration"
			],
			[
				"hitbox",
				"hitboxFreeList"
			],
			[
				"paritio",
				"partitionXOffs"
			],
			[
				"partitionC",
				"partitionCenterX"
			],
			[
				"solid",
				"solidGridSquareSize"
			],
			[
				"solidG",
				"solidGridSquareSize"
			],
			[
				"grou",
				"groundReferenceList"
			],
			[
				"colliderH",
				"colliderHitboxList"
			],
			[
				"gr",
				"groundReferenceList"
			],
			[
				"keybo",
				"keyboardFieldChildren"
			],
			[
				"newP",
				"newParentFieldIndex"
			],
			[
				"En",
				"EntityFlag_shootsAtTarget"
			],
			[
				"px",
				"pixelsPerMeter"
			],
			[
				"should",
				"shouldChangeDirection"
			],
			[
				"hor",
				"horizontalCollision"
			],
			[
				"EntityF",
				"EntityFlag_consoleSelected"
			],
			[
				"EntityFlag_C",
				"EntityFlag_consoleSelected"
			],
			[
				"ConsoleF",
				"ConsoleField_Float"
			],
			[
				"ME",
				"PIXELS_PER_METER"
			],
			[
				"get",
				"getAnimationFrame"
			],
			[
				"drwa",
				"drawFilledRectangle"
			],
			[
				"E",
				"EntityFlag_facesLeft"
			],
			[
				"getR",
				"getRectHeight"
			],
			[
				"up",
				"upJustPressed"
			],
			[
				"leftMouseB",
				"leftMouseButtonJustPressed"
			],
			[
				"ho",
				"horizontalCollision"
			],
			[
				"max",
				"maxCollisionTime"
			],
			[
				"xM",
				"xMoveAcceleration"
			],
			[
				"x",
				"xMoveAcceleration"
			],
			[
				"ENTI",
				"EntityFlag"
			],
			[
				"SDL_R",
				"SDL_Renderer"
			],
			[
				"coll",
				"collisionTime"
			],
			[
				"col",
				"collisionTime"
			],
			[
				"colli",
				"collisionTime"
			],
			[
				"min",
				"minkowskiSum"
			],
			[
				"add",
				"addRadiusTo"
			],
			[
				"Entity",
				"EntityType_Player"
			],
			[
				"entiti",
				"entityIndex"
			],
			[
				"entity",
				"entityIndex"
			],
			[
				"num",
				"numEntities"
			],
			[
				"src",
				"srcRect"
			],
			[
				"tile",
				"tileRows"
			],
			[
				"push",
				"pushIntoArena_"
			],
			[
				"til",
				"tileWidth"
			],
			[
				"at",
				"atlasWidth"
			],
			[
				"atl",
				"atlasHeight"
			],
			[
				"load",
				"loadDelmittedStringIntoBuffer"
			],
			[
				"atlas",
				"atlasFileName"
			],
			[
				"center",
				"centerToPoint"
			],
			[
				"getD",
				"getDiamondRotation"
			],
			[
				"cen",
				"centerToMid"
			],
			[
				"draw",
				"drawDiamond"
			],
			[
				"sand",
				"sandbags"
			],
			[
				"SA",
				"SANDBAG"
			],
			[
				"MAX",
				"MAX_SANDBAGS"
			],
			[
				"ENTITY",
				"EntityType"
			],
			[
				"MAX_",
				"MAX_SANDBAGS"
			],
			[
				"san",
				"sandbags"
			],
			[
				"sandbag",
				"sandbagWidth"
			],
			[
				"PI",
				"PIXELS_PER_METER"
			],
			[
				"br",
				"br"
			],
			[
				"TA",
				"TANK_SIZE_METERS"
			],
			[
				"T",
				"TILE_SIZE_METERS"
			],
			[
				"WIND",
				"WINDOW_HEIGHT"
			],
			[
				"WIN",
				"WINDOW_WIDTH"
			],
			[
				"TANK",
				"TANK_SIZE_METERS"
			],
			[
				"turre",
				"turretAngle"
			],
			[
				"leng",
				"lengthSq"
			],
			[
				"create",
				"createBullet"
			],
			[
				"dstRect",
				"dstRectOffsetX"
			],
			[
				"turret",
				"turretTexHeight"
			],
			[
				"P",
				"PIXELS_PER_METER"
			],
			[
				"TANK_S",
				"TANK_SIZE_METERS"
			],
			[
				"Til",
				"TILE_SIZE_PIXELS"
			],
			[
				"TILE",
				"TILE_SIZE_PIXELS"
			]
		]
	},
	"buffers":
	[
		{
			"file": "code/hackformer_consoleField.cpp",
			"settings":
			{
				"buffer_size": 25498,
				"line_ending": "Windows"
			}
		},
		{
			"file": "code/hackformer.cpp",
			"settings":
			{
				"buffer_size": 23349,
				"line_ending": "Windows"
			}
		},
		{
			"file": "shaders/forward.frag",
			"settings":
			{
				"buffer_size": 2522,
				"line_ending": "Windows"
			}
		},
		{
			"file": "code/hackformer_entity.cpp",
			"settings":
			{
				"buffer_size": 72970,
				"line_ending": "Windows"
			}
		},
		{
			"file": "code/hackformer_renderer.cpp",
			"settings":
			{
				"buffer_size": 35114,
				"line_ending": "Windows"
			}
		},
		{
			"file": "code/hackformer_renderer.h",
			"settings":
			{
				"buffer_size": 2623,
				"line_ending": "Windows"
			}
		},
		{
			"file": "code/hackformer_math.h",
			"settings":
			{
				"buffer_size": 7221,
				"line_ending": "Windows"
			}
		},
		{
			"file": "code/hackformer.h",
			"settings":
			{
				"buffer_size": 5038,
				"line_ending": "Windows"
			}
		},
		{
			"file": "code/hackformer_consoleField.h",
			"settings":
			{
				"buffer_size": 1879,
				"line_ending": "Windows"
			}
		},
		{
			"file": "code/hackformer_entity.h",
			"settings":
			{
				"buffer_size": 2774,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "Packages/User/test build 1.sublime-build",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 127.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"Package Control: ena",
				"Package Control: Enable Package"
			],
			[
				"Package Control: list",
				"Package Control: List Packages"
			],
			[
				"Package Control: in",
				"Package Control: Install Package"
			],
			[
				"Package Control: insta",
				"Package Control: Install Package"
			]
		],
		"width": 416.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/W/c++former/code",
		"/W/c++former/shaders"
	],
	"file_history":
	[
		"/C/Users/Vik/Downloads/handmade_hero_108_source/handmade_hero_day_108_source/code/handmade_render_group.cpp",
		"/C/Users/Vik/Downloads/handmade_hero_108_source/handmade_hero_day_108_source/code/handmade.cpp",
		"/C/Users/Vik/Downloads/handmade_hero_108_source/handmade_hero_day_108_source/code/win32_handmade.cpp",
		"/W/c++former/shaders/forward.frag",
		"/W/c++former/shaders/basic.frag",
		"/W/c++former/shaders/basic.vert",
		"/W/c++former/code/hackformer.cpp",
		"/W/c++former/code/hackformer_consoleField.cpp",
		"/W/c++former/release/shaders/basic.frag",
		"/W/c++former/code/hackformer_math.h",
		"/W/c++former/code/hackformer_renderer.cpp",
		"/W/Dunjun/data/shaders/default.frag",
		"/C/Users/Vik/Downloads/pixel_exact/pixel_exact/glsl/simple.vert",
		"/C/Users/Vik/Downloads/pixel_exact/pixel_exact/glsl/simple.frag",
		"/W/c++former/code/hackformer_entity.cpp",
		"/W/Dunjun/code/Dunjun.cpp",
		"/W/c++former/code/hackformer.h",
		"/W/c++former/code/hackformer_entity.h",
		"/W/c++former/code/hackformer_consoleField.h",
		"/W/c++former/code/hackformer_renderer.h",
		"/C/Users/Vik/AppData/Local/Temp/Temp1_handmade_hero_day_093_source.zip/code/handmade_render_group.h",
		"/C/Users/Vik/AppData/Local/Temp/Temp1_handmade_hero_day_093_source.zip/code/handmade_render_group.cpp",
		"/W/c++former/shaders/basic.frag.txt",
		"/W/c++former/build/include/SOIL.h",
		"/W/c++former/code/hackformer_consolefield.h",
		"/C/Users/Vik/AppData/Local/Temp/Temp2_handmade_hero_day_075_source.zip/code/handmade_platform.h",
		"/C/Users/Vik/AppData/Local/Temp/Temp2_handmade_hero_day_075_source.zip/code/handmade.h",
		"/C/Users/Vik/AppData/Local/Temp/Temp2_handmade_hero_day_075_source.zip/code/handmade.cpp",
		"/W/c++former/code/hackformer_math.cpp",
		"/C/Users/Vik/AppData/Roaming/Sublime Text 3/Packages/User/Default (Windows).sublime-keymap",
		"/W/td/code/td_math.cpp",
		"/W/td/code/td_renderer.h",
		"/W/td/code/td_main.cpp",
		"/W/td/code/td_renderer.cpp",
		"/W/td/code/td_main.h",
		"/C/Users/Vik/AppData/Local/Temp/Temp2_handmade_hero_day_075_source.zip/code/handmade_math.h",
		"/W/td/code/td_math.h",
		"/C/Users/Vik/AppData/Roaming/Sublime Text 3/Packages/User/td_build.sublime-build",
		"/W/td/code/hackformer.h",
		"/W/td/code/hackformer.cpp",
		"/C/Users/Vik/AppData/Local/Temp/Temp1_handmade_hero_day_075_source.zip/code/handmade_sim_region.cpp",
		"/C/Users/Vik/AppData/Local/Temp/Temp1_handmade_hero_day_075_source.zip/code/handmade_entity.h",
		"/C/Users/Vik/AppData/Local/Temp/Temp1_handmade_hero_day_075_source.zip/code/handmade_entity.cpp",
		"/C/Users/Vik/AppData/Local/Temp/Temp1_handmade_hero_day_075_source.zip/code/handmade.cpp",
		"/W/c++former/build/include/SDL_ttf.h",
		"/W/c++former/build/include/begin_code.h",
		"/C/Users/Vik/AppData/Roaming/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/C/Users/Vik/Downloads/handmade_hero_038_source/handmade_hero_day_038_source/code/handmade.h",
		"/C/Users/Vik/Downloads/handmade_hero_038_source/handmade_hero_day_038_source/code/handmade.cpp",
		"/C/Users/Vik/AppData/Roaming/Sublime Text 3/Packages/HighlightBuildErrors/HighlightBuildErrors.sublime-settings",
		"/C/Users/Vik/AppData/Roaming/Sublime Text 3/Packages/User/SublimeLinter.sublime-settings",
		"/C/Users/Vik/AppData/Roaming/Sublime Text 3/Packages/User/test build 1.sublime-build",
		"/W/c++former/hackformer.cpp",
		"/W/c++former/hackformer_math.cpp",
		"/W/c++former/main.cpp",
		"/W/rewind_shooter/main.cpp",
		"/C/Users/Vik/AppData/Local/Temp/Temp1_handmade_hero_day_060_source.zip/code/handmade.cpp",
		"/C/Users/Vik/AppData/Local/Temp/Temp1_handmade_hero_day_060_source.zip/code/handmade.h",
		"/C/Users/Vik/AppData/Local/Temp/Temp1_handmade_hero_day_060_source.zip/code/handmade_intrinsics.h",
		"/C/Users/Vik/AppData/Local/Temp/Temp1_handmade_hero_day_060_source.zip/code/handmade_math.h",
		"/C/Users/Vik/AppData/Local/Temp/Temp1_handmade_hero_day_060_source.zip/code/linux_handmade.cpp",
		"/C/Users/Vik/AppData/Local/Temp/Temp1_handmade_hero_day_060_source.zip/code/handmade_random.h",
		"/C/Users/Vik/AppData/Local/Temp/Temp1_handmade_hero_day_052_source.zip/code/handmade.cpp",
		"/W/rewind_shooter/build/include/SDL.h",
		"/W/FacebookHackerCup2015/NewYearsResolution/main.cpp",
		"/C/Users/Vik/Downloads/handmade_hero_038_source/handmade_hero_day_038_source/code/handmade_platform.h",
		"/C/Users/Vik/Downloads/handmade_hero_038_source/handmade_hero_day_038_source/code/win32_handmade.cpp",
		"/C/Users/Vik/AppData/Roaming/Sublime Text 3/Packages/Default/Default (Windows).sublime-keymap",
		"/C/Users/Vik/Downloads/01_hello_SDL/01_hello_SDL/01_hello_SDL.cpp",
		"/C/Users/Vik/Desktop/test.c",
		"/C/Users/Vik/AppData/Roaming/Sublime Text 3/Packages/Default/Preferences.sublime-settings"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"nullN",
			"nullNormalId",
			"fps",
			"collisionTimeE",
			"ambient",
			"spotLight",
			"pushS",
			"GL_ONE",
			"EntityType_laserBase",
			"createRenderTexture",
			"emissivity",
			"setAmbient",
			"emissivity",
			"	result->emissivity = 0.000001f;\nambient",
			"ambient",
			"bindS",
			"glUseP",
			"result.program",
			"ambient",
			"pushP",
			"accepts",
			"drawConsoleTriangle",
			"setClipRect",
			"clipRect",
			"EntityFlag_laserO",
			"EntityType_laserTop",
			"EntityType_laserBase",
			"EntityType_laserTop",
			"stroke",
			"renderBounds",
			"moveToEquilibrium",
			"equil",
			"offs = ",
			"drawFields",
			"field->offs",
			"moveField",
			"moveToEquilibrium",
			"drawFields",
			"moveField",
			"drawOutlinedConsoleBox",
			"moveField",
			"EntityType_back",
			"moveTime",
			"showPlayerHackingAnim",
			"playerHack",
			"keyboardCo",
			"vsync",
			"animTime",
			"keyboard",
			"breakHere",
			"currentAnim = ",
			"animTime",
			"showPlayerHackingAnim",
			"ambient",
			"addF",
			"gl",
			"facesLeft",
			"setUniform",
			"white",
			"pushText",
			"camera",
			"setColor",
			"metersPerPixel",
			"AnimState_standing",
			"groundFriction",
			"gravity",
			"remove if",
			"remove when",
			"entity->ref -1",
			"entity->ref + 2",
			"entity->ref + 1",
			"shoot",
			"372",
			"EntityType_tile",
			"EntityType_heavyTile",
			"EntityFlag_removeWhenOutsideLevel",
			"EntityType_tile",
			"EntityType_laserBeam",
			"getMovementField",
			"epsilon",
			"moveEp",
			"drawTexture",
			"isTileT",
			"doubleValues",
			"sprin",
			"addPrimitiveField",
			"addPrimi",
			"moveFieldChildren",
			"case EntityType_player",
			"drawConsoleTriangle",
			"moveField",
			"drawOutlinedConsoleBox",
			"moveField",
			"f = ",
			"animTime = ",
			"isLaserC",
			"moveTime",
			"moveRaw",
			"epsilon",
			"addGroundReference",
			"moveRaw",
			"playerDeathSize",
			"EntityType_tile",
			"result",
			"EntityType_tile",
			"renderSize",
			"chunkSize",
			"levelStorage",
			"levelStorager",
			"RefNode",
			"FreeList",
			"drawConsoleTriangle",
			"keyboard",
			"getEntityByRef",
			"cameraP",
			"centerCameraAround",
			"EntityType_playerD",
			"EntityType_play",
			"chunkSize",
			"{}",
			"Hitbox*",
			" collider != entity",
			" collider != entity &",
			" collider != entity &&\n						collidesWith(entity, collider, gameState",
			"&gameState->levelStorag",
			"31",
			"result.",
			"drawConsoleT"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"result.shader.program",
			"tile",
			"result->",
			"double",
			"entity",
			"setFlags",
			"texture->",
			"animTime",
			"uint",
			"result",
			"uint32",
			"arrayCount",
			"tileX"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "code/hackformer_consoleField.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 25498,
						"regions":
						{
						},
						"selection":
						[
							[
								17200,
								17200
							]
						],
						"settings":
						{
							"history_list_is_closing": true,
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 9268.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "code/hackformer.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 23349,
						"regions":
						{
						},
						"selection":
						[
							[
								252,
								252
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "shaders/forward.frag",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2522,
						"regions":
						{
						},
						"selection":
						[
							[
								2221,
								2221
							]
						],
						"settings":
						{
							"syntax": "Packages/OpenGL Shading Language (GLSL)/GLSL.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 585.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "code/hackformer_entity.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 72970,
						"regions":
						{
						},
						"selection":
						[
							[
								33802,
								33802
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 16452.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "code/hackformer_renderer.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 35114,
						"regions":
						{
						},
						"selection":
						[
							[
								30624,
								30624
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 15114.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 5,
					"file": "code/hackformer_renderer.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2623,
						"regions":
						{
						},
						"selection":
						[
							[
								49,
								49
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "code/hackformer_math.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7221,
						"regions":
						{
						},
						"selection":
						[
							[
								841,
								841
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 360.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "code/hackformer.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5038,
						"regions":
						{
						},
						"selection":
						[
							[
								779,
								779
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 218.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "code/hackformer_consoleField.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1879,
						"regions":
						{
						},
						"selection":
						[
							[
								1059,
								1059
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 675.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "code/hackformer_entity.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2774,
						"regions":
						{
						},
						"selection":
						[
							[
								526,
								526
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.507291666666,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 278.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "hackformer_project.sublime-project",
	"replace":
	{
		"height": 62.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"W:\\Dunjun\\Dunjun_workspace.sublime-workspace"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 311.0,
		"last_filter": "main",
		"selected_items":
		[
			[
				"main",
				"main"
			],
			[
				"pintI",
				"pointInsideRect"
			],
			[
				"pushT",
				"pushTexture"
			],
			[
				"move",
				"moveRaw"
			],
			[
				"moveRaw",
				"moveRaw"
			],
			[
				"addBa",
				"addBackground"
			]
		],
		"width": 392.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 150.0,
	"status_bar_visible": false,
	"template_settings":
	{
	}
}
